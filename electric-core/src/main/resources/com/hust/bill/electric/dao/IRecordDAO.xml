<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.bill.electric.dao.IRecordDAO">
	<!-- task -->
	<resultMap id="recordTaskResultMap" type="com.hust.bill.electric.bean.task.record.RecordTaskBean">
    <id column="id"               property="id"           jdbcType="BIGINT" />
    <result column="name"         property="name"         jdbcType="NVARCHAR" />
    <result column="startTime"    property="startTime"    />
    <result column="endTime"      property="endTime"      />
    <result column="resultCount"  property="resultCount"  jdbcType="INTEGER" />
    <result column="status"       property="status"       jdbcType="INTEGER" typeHandler="com.hust.bill.electric.dao.TaskStatusTypeHandler" />
  </resultMap>
  
	<insert id="insertTask">
      insert into e_record_task(name, startTime, status) 
      values (#{name}, now(), #{status, typeHandler=com.hust.bill.electric.dao.TaskStatusTypeHandler})
  </insert>
  
  <update id="updateTaskSatus">
      update e_record_task set status = #{status, typeHandler=com.hust.bill.electric.dao.TaskStatusTypeHandler} where id = #{id}
  </update>
  
  <update id="updateTaskEndTime">
      update e_record_task set endTime = now() where id = #{id}
  </update>
  
  <update id="updateTaskResultCount">
      update e_record_task set resultCount = (select count(buildingName) from e_record_task_result where taskId = #{id}) where id = #{id}
  </update>
  
  <select id="getTaskIDByName" resultType="java.math.BigInteger">
    select id from e_record_task where name = #{name}
  </select>
  
  <select id="getAllTask" resultMap="recordTaskResultMap">
    select id, name, starTime, endTime, resultCount, status from e_record_task
  </select>
  
  
  <!-- taskResult -->
  <resultMap id="recordTaskResultResultMap" type="com.hust.bill.electric.bean.task.record.RecordTaskResultBean">
    <id column="id"                 property="id"             jdbcType="BIGINT" />
    <result column="taskId"         property="taskID"         jdbcType="BIGINT" />
    <result column="buildingName"   property="buildingName"   jdbcType="NVARCHAR" />
    <result column="remainCount"    property="remainCount"    jdbcType="INTEGER" />
    <result column="chargeCount"    property="chargeCount"    jdbcType="INTEGER" />
    <result column="stamp"          property="timestamp"      />
  </resultMap>
  
  <insert id="insertTaskResult">
      insert into e_record_task_result(taskId, buildingName, remainCount, chargeCount, stamp) values
      (#{taskID}, #{buildingName}, #{remainCount}, #{chargeCount}, now())
  </insert>
  
  <select id="getTaskResultsByTaskID" resultMap="recordTaskResultResultMap">
    select id, taskId, buildingName, remainCount, chargeCount from e_record_task_result where taskId= #{taskID}
  </select>

  
  <!-- record -->
  <resultMap id="recordRemainResultMap" type="com.hust.bill.electric.bean.RemainRecord">
    <result column="buildingName"   property="buildingName"   jdbcType="NVARCHAR" />
    <result column="roomName"       property="roomName"       jdbcType="VARCHAR" />
    <result column="stamp"          property="dateTime"       />
    <result column="remain"         property="remain"         jdbcType="FLOAT" />
  </resultMap>
  <resultMap id="recordChargeResultMap" type="com.hust.bill.electric.bean.ChargeRecord">
    <result column="buildingName"   property="buildingName"   jdbcType="NVARCHAR" />
    <result column="roomName"       property="roomName"       jdbcType="VARCHAR" />
    <result column="stamp"          property="dateTime"       />
    <result column="power"          property="chargePower"    jdbcType="FLOAT" />
    <result column="money"          property="chargeMoney"    jdbcType="FLOAT" />
  </resultMap>
  
  <select id="getLastRemainsByBuilding" resultMap="recordRemainResultMap">
     select buildingName, roomName, max(stamp) stamp, remain from e_record_remain where buildingName=#{buildingName} group by roomName;
  </select>
  <select id="getLastChargesByBuilding" resultMap="recordChargeResultMap">
     select buildingName, roomName, max(stamp) stamp, power, money from e_record_charge where buildingName=#{buildingName} group by roomName;
  </select>
  
  <insert id="insertRemains">
    <if test="array.length == 0">
      select count(*) from e_record_remain
    </if>
    <if test="array.length != 0">
      insert into e_record_remain(buildingName, roomName, stamp, remain) values
      <foreach collection="array" item="item" index="index" separator=",">
        (#{item.buildingName, jdbcType=VARCHAR}, #{item.roomName, jdbcType=VARCHAR}, #{item.dateTime}, #{item.remain, jdbcType=FLOAT})
      </foreach>
    </if>
  </insert>
    
  <insert id="insertCharges">
    <if test="array.length == 0">
      select count(*) from e_record_charge
    </if>
    <if test="array.length != 0">
      insert into e_record_charge(buildingName, roomName, stamp, power, money) values
      <foreach collection="array" item="item" index="index" separator=",">
        (#{item.buildingName, jdbcType=VARCHAR}, #{item.roomName, jdbcType=VARCHAR}, #{item.dateTime}, #{item.chargePower, jdbcType=FLOAT}, #{item.chargeMoney, jdbcType=FLOAT})
      </foreach>
    </if>
  </insert>
	
</mapper>